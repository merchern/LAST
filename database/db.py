import random
import sqlite3
from loader import bot


class Database:
    def __init__(self, db_name):
        self.connection = sqlite3.connect(db_name)
        self.cursor = self.connection.cursor()

    def reg_user(self, user_id, user_name):
        with self.connection:
            self.cursor.execute("INSERT INTO users VALUES(?, ?, ?, ?)", (user_id, user_name, 0, 0,))

    def user_exists(self, user_id):
        with self.connection:
            data = self.cursor.execute("SELECT userid FROM users WHERE userid = ?", (user_id,)).fetchall()
            return bool(len(data))

    def check_adm_access(self, user_id):
        with self.connection:
            data_adm = self.cursor.execute("SELECT admin_id FROM admins WHERE admin_id = ?", (user_id,)).fetchall()
            return bool(len(data_adm))

    async def get_user_info(self, user_id):
        with self.connection:
            data = self.cursor.execute("SELECT * FROM users WHERE userid = ?", (user_id,)).fetchall()

            for rows in data:
                if rows[3] == 0:
                    await bot.send_message(user_id, f"ID –∞–∫–∫–∞—É–Ω—Ç–∞: {rows[0]}\n"
                                                    f"–ò–º—è –∞–∫–∫–∞—É–Ω—Ç–∞: {rows[1]}\n"
                                                    f"–û–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {rows[2]}")
                elif rows[3] == 1:
                    await bot.send_message(user_id, "—Ç—ã –≤ –±–∞–Ω–µ –∞—Ä—è—è. –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞. –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Å–ø–æ—Ä–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
                elif rows[3] == 2:
                    await bot.send_message(user_id, f"–±–∞–Ω –æ—Ç @merchern . –ü–∏—à–∏ –≤ –ª—Å, –µ—Å–ª–∏ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–∏—á–∏–Ω–∞. –°—Ä–∞–∑—É –∫–∏–¥–∞–π —Å–≤–æ–π –ò–î: {user_id}")


    async def request_photo(self, user_id, user_name, own, file_id, file_type):
        with self.connection:
            rand_id = random.randint(1, 999)
            data = self.cursor.execute("SELECT user_id FROM requests WHERE user_id = ?", (user_id,)).fetchall()
            admins = self.cursor.execute("SELECT admin_id FROM admins").fetchall()

            if not data:
                self.cursor.execute("INSERT INTO requests VALUES(?, ?, ?, ?, ?, ?)", (rand_id, user_id, user_name, own, file_id, file_type,))

                for res in admins:
                    await bot.send_photo(*res, file_id, caption=f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é</b>\n\n"
                                                 f"–ò–î –∑–∞—è–≤–∫–∏: {rand_id}\n"
                                                 f"–ò–î –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user_id}\n"
                                                 f"–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user_name}\n"
                                                 f"–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ñ–æ—Ç–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –∫–æ–Ω—Ç–∞–∫—Ç—ã: {own}\n"
                                                 f"–¢–∏–ø —Ñ–∞–π–ª–∞: {file_type}\n")
            else:
                await bot.send_message(user_id, "—É —Ç–µ–±—è —É–∂–µ –≤–∏—Å–∏—Ç –æ–¥–Ω–∞ –∑–∞—è–≤–∫–∞, –∂–¥–∏ –ø–æ–∫–∞ –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç.")

    async def request_video(self, user_id, user_name, own, file_id, file_type):
        with self.connection:
            rand_id = random.randint(999, 9999)
            data = self.cursor.execute("SELECT user_id FROM requests WHERE user_id = ?", (user_id,)).fetchall()
            admins = self.cursor.execute("SELECT admin_id FROM admins").fetchall()

            if not data:
                self.cursor.execute("INSERT INTO requests VALUES(?, ?, ?, ?, ?, ?)", (rand_id, user_id, user_name, own, file_id, file_type,))

                for res in admins:
                    await bot.send_video(*res, file_id, caption=f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é</b>\n\n"
                                                 f"–ò–î –∑–∞—è–≤–∫–∏: {rand_id}\n"
                                                 f"–ò–î –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user_id}\n"
                                                 f"–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user_name}\n"
                                                 f"–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ñ–æ—Ç–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –∫–æ–Ω—Ç–∞–∫—Ç—ã: {own}\n"
                                                 f"–¢–∏–ø —Ñ–∞–π–ª–∞: {file_type}\n")
            else:
                await bot.send_message(user_id, "—É —Ç–µ–±—è —É–∂–µ –≤–∏—Å–∏—Ç –æ–¥–Ω–∞ –∑–∞—è–≤–∫–∞, –∂–¥–∏ –ø–æ–∫–∞ –µ—ë —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç.")


    async def accept_post(self, id, vote):
        with self.connection:
            data = self.cursor.execute("SELECT * FROM requests WHERE id = ?", (id,))

            for res in data:
                if res[5] == 'photo':
                    if vote == True:
                        await bot.send_photo(-1001772787084, res[4], caption="ü¶Ñ - –Ω–æ—Ä–º–∏\n"
                                                                             "üíä - –ø—Ä–æ—Å—Ç–æ –∫—Ä—É—Ç–æ –∫–ª–∞—Å—Å —Ç–æ–ø\n"
                                                                             "üôâ - –∫—Ä–∏–Ω–≥–µ –ª—é—Ç–∏")
                        await bot.send_message(res[1], "–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
                        self.cursor.execute("DELETE FROM requests WHERE id = ?", (id,))
                    elif vote == False:
                        await bot.send_photo(-1001772787084, res[4])
                        await bot.send_message(res[1], "–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
                        self.cursor.execute("DELETE FROM requests WHERE id = ?", (id,))
                elif res[5] == 'video':
                    if vote == True:
                        await bot.send_video(-1001772787084, res[4], caption="ü¶Ñ - –Ω–æ—Ä–º–∏\n"
                                                                             "üíä - –ø—Ä–æ—Å—Ç–æ –∫—Ä—É—Ç–æ –∫–ª–∞—Å—Å —Ç–æ–ø\n"
                                                                             "üôâ - –∫—Ä–∏–Ω–≥–µ –ª—é—Ç–∏")
                        await bot.send_message(res[1], "–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
                        self.cursor.execute("DELETE FROM requests WHERE id = ?", (id,))
                    elif vote == False:
                        await bot.send_video(-1001772787084, res[4])
                        await bot.send_message(res[1], "–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω")
                        self.cursor.execute("DELETE FROM requests WHERE id = ?", (id,))


    async def denied_post(self, id, reason, banned):
        with self.connection:
            data = self.cursor.execute("SELECT * FROM requests WHERE id = ?", (id,)).fetchall()

            for res in data:
                remove = self.cursor.execute("DELETE FROM requests WHERE id = ?", (id,))

                if banned == True:
                    self.cursor.execute("UPDATE users SET banned = 1 WHERE userid = ?", (res[1],))
                    await bot.send_message(res[1], f"–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω, –∞ –µ—â–µ —Ç–µ–ø–µ—Ä—å —Ç—ã –≤ –±–∞–Ω–µ. –ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞+–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {reason}")
                    return remove
                elif banned == False:
                    await bot.send_message(res[1], f"–¢–≤–æ–π –ø–æ—Å—Ç –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
                    return remove
                
    async def request_remove(self, userid, user_name, link, reason):
        with self.connection:
            data = self.cursor.execute("SELECT * FROM remove_requests WHERE userid = ?", (userid,)).fetchall()
            admins = self.cursor.execute("SELECT admin_id FROM admins").fetchall()
            rand_id = random.randint(0, 100)

            if not data:
                self.cursor.execute("INSERT INTO remove_requests VALUES(?, ?, ?, ?, ?)", (rand_id, userid, user_name, link, reason,))

                for res in admins:
                    await bot.send_message(*res, f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞</b>\n\n"
                                                 f"–ò–î –∑–∞—è–≤–∫–∏: {rand_id}\n"
                                                 f"–ò–î –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {userid}\n"
                                                 f"–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {user_name}\n"
                                                 f"–ü—Ä–∏—á–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è: {reason}\n"
                                                 f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: {link}\n")
            else:
                await bot.send_message(userid, "–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –æ–¥–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ. –ù–µ –∑–∞—Å–∏—Ä–∞–π –ë–î –∏ –∂–¥–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è")

    async def request_remove_del(self, id, value):
        with self.connection:
            data = self.cursor.execute("SELECT * FROM remove_requests WHERE id = ?", (id,)).fetchall()

            for res in data:
                if value == True:
                    remove = self.cursor.execute("DELETE FROM remove_requests WHERE id = ?", (id,))
                    await bot.send_message(res[1], f"–¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω")
                    return remove
                else:
                    remove = self.cursor.execute("DELETE FROM remove_requests WHERE id = ?", (id,))
                    await bot.send_message(res[1], f"–¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω")
                    return remove
